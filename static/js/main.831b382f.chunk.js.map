{"version":3,"sources":["components/Header.js","reducers/priceReducer.js","reducers/cashReducer.js","reducers/tillReducer.js","reducers/statusReducer.js","reducers/index.js","actions/types.js","store.js","components/Cash.js","actions/tillActions.js","components/Till.js","actions/priceActions.js","components/Cashback.js","actions/statusActions.js","components/Customer.js","actions/cashActions.js","App.js","index.js"],"names":["Header","className","Component","initialState","price","cashGiven","till","status","combineReducers","state","action","type","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Cash","totalTillCash","fiftyPounds","twentyPounds","tenPounds","fivePounds","twoPounds","onePounds","fiftyPence","twentyPence","tenPence","fivePence","twoPence","onePence","totalCash","parseFloat","roundToTwo","setState","tillTotal","document","getElementById","innerHTML","toFixed","props","updateTill","bind","downButton","upButton","num","Math","round","e","this","prevState","map","denom","onClick","id","style","color","connect","dispatch","tillData","Till","handleChange","subscribe","getState","target","value","updatePrice","tillStatusStyle","textAlign","display","gridTemplateColumns","justifyContent","padding","backgroundColor","fontFamily","fontSize","min","step","onChange","src","process","alt","priceData","Cashback","custCash","checkCashRegister","cash","cid","currency","name","val","changeArr","change","currentCustChange","changeForCustomer","i","Object","values","currencyValue","cidValue","totalValuePerCurrency","cidTotal","cidValues","reduce","a","b","changeTotal","previousProps","previousState","denomObj","console","log","cashback","updateStatus","totalCashback","statusData","Customer","updateCash","cashData","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.831b382f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div>\n                <h1 className=\"header\">Cash Register</h1>\n                \n            </div>\n        )\n    }\n}\n\nexport default Header\n","import { UPDATE_PRICE } from '../actions/types';\n\nconst initialState = {\n    price: 0,\n}\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_PRICE:\n            return action.price;\n        default:\n            return state;\n    }\n}","import { UPDATE_CASH } from '../actions/types';\n\nconst initialState = {\n    cashGiven: 0\n}\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_CASH: \n            return action.cashGiven;\n        default:\n            return state;\n    }\n}","import { UPDATE_TILL } from '../actions/types';\n\nconst initialState = {\n    till: [\n        [\"£50\", 0],\n        [\"£20\", 0],\n        [\"£10\", 0],\n        [\"£5\", 0],\n        [\"£2\", 0],\n        [\"£1\", 0],\n        [\"50p\", 0],\n        [\"20p\", 0],\n        [\"10p\", 0],\n        [\"5p\", 0],\n        [\"2p\", 0],\n        [\"1p\", 0]\n    ]\n}\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_TILL:\n            return action.till;\n        default:\n            return state;\n    }\n}\n ","import { UPDATE_STATUS} from '../actions/types';\n\nconst initialState = {\n    status: 0,\n}\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_STATUS:\n            return action.status;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport priceReducer from './priceReducer';\nimport cashReducer from './cashReducer';\nimport tillReducer from './tillReducer';\nimport statusReducer from './statusReducer';\n\nexport default combineReducers({\n    price: priceReducer,\n    cashGiven: cashReducer,\n    till: tillReducer,\n    status: statusReducer\n});\n    ","export const UPDATE_PRICE = 'UPDATE_PRICE';\nexport const UPDATE_CASH = 'UPDATE_CASH';\nexport const UPDATE_TILL = 'UPDATE_TILL';\nexport const UPDATE_STATUS = 'UPDATE_STATUS';","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    applyMiddleware(...middleware)\n);\n\nexport default store;","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { updateTill } from '../actions/tillActions';\nimport store from '../store';\n\nclass Cash extends Component {\n    constructor() {\n        super()\n        this.state = {\n            fiftyPounds: 3,\n            twentyPounds: 5,\n            tenPounds: 3,\n            fivePounds: 11,\n            twoPounds: 1,\n            onePounds: 0,\n            fiftyPence: 1,\n            twentyPence: 7,\n            tenPence: 9,\n            fivePence: 6,\n            twoPence: 20,\n            onePence: 50,\n            \n            tillTotal: 0\n        }\n\n        this.roundToTwo = this.roundToTwo.bind(this);\n        this.downButton = this.downButton.bind(this);\n        this.upButton = this.upButton.bind(this);\n        this.totalTillCash = this.totalTillCash.bind(this);\n    }\n\n    roundToTwo(num) {\n        return + (Math.round(num + \"e+2\")  + \"e-2\");\n    }\n\n    downButton(e) {\n        if (this.state[e] === 0) {\n            return\n        } \n        this.setState(prevState => {\n            return {\n                [e]: prevState[e] - 1\n            }\n        }, () => {\n            document.getElementById(e).innerHTML = \"x\"+ this.state[e];\n            this.totalTillCash() \n        })\n    }\n\n    upButton(e) { \n        this.setState(prevState => {\n            return {\n                [e]: prevState[e] + 1\n            }\n        }, () => {\n            document.getElementById(e).innerHTML = \"x\"+ this.state[e];\n            this.totalTillCash() \n        })  \n    }\n\n    totalTillCash = () => {\n        \n        let till = [\n            [\"£50\", this.state.fiftyPounds * 50],\n            [\"£20\", this.state.twentyPounds * 20],\n            [\"£10\", this.state.tenPounds * 10],\n            [\"£5\", this.state.fivePounds * 5],\n            [\"£2\", this.state.twoPounds * 2],\n            [\"£1\", this.state.onePounds * 1],\n            [\"50p\", this.state.fiftyPence * 0.50],\n            [\"20p\", this.state.twentyPence * 0.20],\n            [\"10p\", this.state.tenPence * 0.10],\n            [\"5p\", this.state.fivePence * 0.05],\n            [\"2p\", this.state.twoPence * 0.02],\n            [\"1p\", this.state.onePence * 0.01]\n        ]\n\n        var totalCash = parseFloat(this.roundToTwo(\n            this.state.fiftyPounds * 50 +\n            this.state.twentyPounds * 20 +\n            this.state.tenPounds * 10 +\n            this.state.fivePounds * 5 +\n            this.state.twoPounds * 2 +\n            this.state.onePounds * 1 +\n            this.state.fiftyPence * 0.50 +\n            this.state.twentyPence * 0.20 +\n            this.state.tenPence * 0.10 +\n            this.state.fivePence * 0.05 +\n            this.state.twoPence * 0.02 +\n            this.state.onePence * 0.01 \n        ))\n\n         this.setState({\n            tillTotal: totalCash\n         }, () => {\n            document.getElementById(\"tillCash\").innerHTML = \"£\" + this.state.tillTotal.toFixed(2);\n            this.props.updateTill(till)\n         })\n    }\n\n    componentDidMount () {\n        let denomArr = [\n            \"fiftyPounds\", \"twentyPounds\", \"tenPounds\",\n            \"fivePounds\", \"twoPounds\", \"onePounds\", \n            \"fiftyPence\", \"twentyPence\", \"tenPence\", \n            \"fivePence\", \"twoPence\", \"onePence\",\n        ]\n        denomArr.map( denom => document.getElementById(denom).innerHTML = \"x\"+ this.state[denom])\n        this.totalTillCash()\n\n    }\n\n    render() {\n\n        return (\n            <div>\n            \n                <div className=\"cash\">\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"fiftyPounds\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£50</h4>\n                            \n                            <h6 id=\"fiftyPounds\" style={{color: this.state.fiftyPounds > 0 ? \"darkgreen\" : \"black\"}} >x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"fiftyPounds\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"twentyPounds\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£20</h4>\n                            <h6 id=\"twentyPounds\" style={{color: this.state.twentyPounds > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"twentyPounds\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"tenPounds\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£10</h4>\n                            <h6 id=\"tenPounds\" style={{color: this.state.tenPounds > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"tenPounds\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"fivePounds\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£5</h4>\n                            <h6 id=\"fivePounds\" style={{color: this.state.fivePounds > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"fivePounds\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"twoPounds\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£2</h4>\n                            <h6 id=\"twoPounds\" style={{color: this.state.twoPounds > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"twoPounds\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"onePounds\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£1</h4>\n                            <h6 id=\"onePounds\" style={{color: this.state.onePounds > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"onePounds\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"fiftyPence\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>50p</h4>\n                            <h6 id=\"fiftyPence\" style={{color: this.state.fiftyPence > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"fiftyPence\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"twentyPence\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>20p</h4>\n                            <h6 id=\"twentyPence\" style={{color: this.state.twentyPence > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"twentyPence\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"tenPence\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>10p</h4>\n                            <h6 id=\"tenPence\" style={{color: this.state.tenPence > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"tenPence\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"fivePence\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>5p</h4>\n                            <h6 id=\"fivePence\" style={{color: this.state.fivePence > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"fivePence\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"twoPence\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>2p</h4>\n                            <h6 id=\"twoPence\" style={{color: this.state.twoPence > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"twoPence\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <button className=\"upDownButton\" onClick={this.downButton.bind(this, \"onePence\")}><i className=\"fa fa-minus\"></i></button>\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>1p</h4>\n                            <h6 id=\"onePence\" style={{color: this.state.onePence > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                        <button className=\"upDownButton\" onClick={this.upButton.bind(this, \"onePence\")}><i className=\"fa fa-plus\"></i></button>\n                    </div>\n                    \n                </div>\n                {this.totalTillCash}\n                <div className=\"bottomDisplayTill\">\n                    <h4>Total Cash in Till: &nbsp;</h4><h4 id=\"tillCash\"></h4>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        till: state\n    }\n}\n\nexport default connect(mapStateToProps, {updateTill} )(Cash)","import { UPDATE_TILL } from './types';\n\nconst tillData = (till) => { return {\n    type: UPDATE_TILL,\n    till: till\n}}\nexport const updateTill = (till) => {\n    return function(dispatch) {\n        dispatch( tillData(till) )\n    }\n}","import React, { Component } from 'react';\nimport Cash from './Cash';\n\nimport { connect } from 'react-redux';\nimport { updatePrice } from '../actions/priceActions';\nimport store from '../store';\n\n\n\nclass Till extends Component {\n    constructor() {\n        super()\n        this.state = {\n            price: 0,  // in pennies \n            cashGiven: 0,\n            status: \"Waiting\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.roundToTwo = this.roundToTwo.bind(this);\n\n        store.subscribe(() => {\n            this.setState({\n                status: store.getState().status\n            })\n        })\n\n        store.subscribe(() => {\n            this.setState({\n                cashGiven: store.getState().cashGiven\n            })\n        })\n    }\n\n    roundToTwo(num) {\n        return + (Math.round(num + \"e+2\")  + \"e-2\");\n    }\n\n    handleChange(e) {\n        this.setState({\n            price: e.target.value\n        }, () => {\n            this.props.updatePrice(this.state.price)\n        })\n    }\n\n    componentDidUpdate() {\n        document.getElementById(\"tillStatus\").innerHTML = this.state.status\n        document.getElementById(\"custChange\").innerHTML = \"£ \" + this.roundToTwo(this.state.cashGiven - this.state.price ).toFixed(2)\n    }\n\n    render() {\n        \n\n        const tillStatusStyle = {\n            textAlign: \"center\",\n            display: \"grid\",\n            gridTemplateColumns: \"auto auto\",\n            justifyContent: \"center\",\n            padding: \"5px\",\n            backgroundColor: \"black\",\n            fontFamily: \"'Dosis', sans-serif\",\n            color:  this.state.status == \"WAITING\" ? \"white\"  :\n                    this.state.status == \"OPEN\" ? \"lightgreen\" :\n                    this.state.status == \"INSUFFICIENT FUNDS\" ? \"red\" :\n                    this.state.status == \"CLOSED\" ? \"yellow\" : \"white\"\n        }\n\n        return (\n            \n            <div className=\"col-md-6 no-gutter\">\n\n                <div className=\"leftside\">\n                    <h2>Till</h2>\n                    <form style={{textAlign: \"center\", fontSize: \"20px\"}}>\n                        Total Price (£): <input \n                                            type=\"number\" \n                                            min=\"0\" \n                                            step=\".01\" \n                                            value={this.state.price} \n                                            onChange={this.handleChange}>\n                                        </input>\n                    </form>\n                    \n                    <img src={process.env.PUBLIC_URL + \"/till.png\"} className=\"imageTill\" alt=\"till\"></img>\n                    <div className=\"till\" style={tillStatusStyle}>\n                        <h5>Till Status: &nbsp;</h5><h5 id=\"tillStatus\"></h5>\n                        <h5>Customer Change: &nbsp;</h5><h5 id=\"custChange\"></h5>\n                    </div>\n                    <Cash />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        price: state\n    }\n}\n\nexport default connect(mapStateToProps, {updatePrice} )(Till)","import { UPDATE_PRICE } from './types';\n\nconst priceData = (price) => { return {\n    type: UPDATE_PRICE,\n    price: price\n}}\nexport const updatePrice = (price) => {\n    return function(dispatch) {\n        dispatch( priceData(price) )\n    }\n}\n\n\n// const cashData = (cashGiven) => { return {\n//     type: UPDATE_CASH,\n//     cashGiven: cashGiven\n// }}\n// export const updateCash = (cashGiven) => {\n//     return function(dispatch) {\n//         dispatch( cashData(cashGiven) )\n//     }\n// }\n\n\n// export const updatePrice = (price) => {\n//     return {\n//         type: UPDATE_PRICE,\n//         price: price\n//     }\n// }","import React, { Component } from 'react';\n  \nimport { connect } from 'react-redux';\nimport { updateStatus } from '../actions/statusActions';\nimport store from '../store';\n\nclass Cashback extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            price: 0,\n            cashGiven: 0,\n\n            till: [\n                [\"£50\", 0],\n                [\"£20\", 0],\n                [\"£10\", 0],\n                [\"£5\", 0],\n                [\"£2\", 0],\n                [\"£1\", 0],\n                [\"50p\", 0],\n                [\"20p\", 0],\n                [\"10p\", 0],\n                [\"5p\", 0],\n                [\"2p\", 0],\n                [\"1p\", 0]\n            ],\n\n            custCash: [\n                [\"£50\", 0],\n                [\"£20\", 0],\n                [\"£10\", 0],\n                [\"£5\", 0],\n                [\"£2\", 0],\n                [\"£1\", 0],\n                [\"50p\", 0],\n                [\"20p\", 0],\n                [\"10p\", 0],\n                [\"5p\", 0],\n                [\"2p\", 0],\n                [\"1p\", 0]\n            ],\n\n            status: \"Waiting\"\n        }\n\n        this.roundToTwo = this.roundToTwo.bind(this);\n        this.checkCashRegister = this.checkCashRegister.bind(this);\n\n        store.subscribe(() => {\n            this.setState({\n                price: store.getState().price\n            })\n        })\n\n        store.subscribe(() => {\n            this.setState({\n                cashGiven: store.getState().cashGiven\n            })\n        })\n\n        store.subscribe(() => {\n            this.setState({\n                till: store.getState().till\n            })\n        })\n\n    }\n      \n    roundToTwo(num) {\n        return +(Math.round(num + \"e+2\")  + \"e-2\");\n    }\n      \n    checkCashRegister(price, cash, cid) {\n\n        var currency = [\n            { name: \"£50\", val: 50.0 },\n            { name: \"£20\", val: 20.0 },\n            { name: \"£10\", val: 10.0 },\n            { name: \"£5\", val: 5.0 },\n            { name: \"£2\", val: 2.0 },\n            { name: \"£1\", val: 1.0 },\n            { name: \"50p\", val: 0.50 },\n            { name: \"20p\", val: 0.20 },\n            { name: \"10p\", val: 0.10 },\n            { name: \"5p\", val: 0.05 },\n            { name: \"2p\", val: 0.02 },\n            { name: \"1p\", val: 0.01 },\n          ];\n          \n        var changeArr = [\n            { name: \"£50\", val: 0 },    // 0\n            { name: \"£20\", val: 0 },\n            { name: \"£10\", val: 0 },\n            { name: \"£5\", val: 0 },\n            { name: \"£2\", val: 0 },\n            { name: \"£1\", val: 0 },\n            { name: \"50p\", val: 0 },\n            { name: \"20p\", val: 0 },\n            { name: \"10p\", val: 0 },\n            { name: \"5p\", val: 0 },\n            { name: \"2p\", val: 0 },\n            { name: \"1p\", val: 0 },    // 11\n        ];\n      \n        var change = this.roundToTwo(cash - price);              // changeerence in changeArr\n        var currentCustChange = 0;                     // current money given to customer\n        var changeForCustomer = this.roundToTwo(change - currentCustChange);  // money left to give to customer\n      \n        // for loop that moves through each currency type in 'currency' array\n        for (let i in Object.values(currency)) {\n      \n          var currencyName = Object.values(currency[i])[0]  // finds currency name\n          var currencyValue = parseFloat(Object.values(currency[i])[1]) // finds currency value\n          var cidValue = parseFloat(cid[i][1])             // finds cash-in-drawer value\n          var totalValuePerCurrency = 0             // total value of each currency\n      \n          // while loop to incrementally add money to the 'changeArr' object\n          while (changeForCustomer >= currencyValue && cidValue > 0) {\n      \n                  cidValue = this.roundToTwo(cidValue - currencyValue)                   // removes one currency from drawer\n                  currentCustChange = this.roundToTwo(currentCustChange + currencyValue) // adds one currency to sum\n      \n                  changeForCustomer = this.roundToTwo(change - currentCustChange)                // finds new remaining change to give\n                  totalValuePerCurrency = this.roundToTwo(totalValuePerCurrency + currencyValue) // adds one currency currency total\n          }\n      \n           // add 'totalValuePerCurrency' to 'changeArr' array\n           changeArr[i].val = totalValuePerCurrency\n        }\n\n         // finds total change in drawer (before customer)\n         var cidTotal = this.roundToTwo(cid.map(cidValues => cidValues[1])\n                                      .reduce((a,b) => a + b, 0))\n\n        // console.log(\"Change For Customer = \" + change)\n        // console.log(\"Current Customer Change = \" + currentCustChange)\n        // console.log(\"Starting Change in Drawer = \" + cidTotal)\n\n        // if change given to customer is less than expected...unsufficient funds\n        if (currentCustChange < change) {\n            return {status: \"INSUFFICIENT FUNDS\", change: changeArr, changeTotal: change}\n        }\n        // if the total cash in the drawer (at the start) is same as the cash given... closed\n        else if (currentCustChange === change && currentCustChange === cidTotal) {\n            return {status: \"CLOSED\", change: cid, changeTotal: change}\n        }\n        // if the total cash in the drawer (at the start) is greater than the cash given... open\n        else if (currentCustChange === change && currentCustChange < cidTotal) {\n            return {status: \"OPEN\", change: changeArr, changeTotal: change}\n        } \n        else {\n            return {status: \"WAITING\", change: changeArr, changeTotal: change}\n        }\n    }\n\n    componentDidUpdate (previousProps, previousState) {\n\n        let denomObj = this.checkCashRegister(store.getState().price, store.getState().cashGiven, this.state.till)\n\n        console.log(denomObj)\n\n        let cashback = [\n            [\"£50\", this.roundToTwo(denomObj.change[0].val / 50)],\n            [\"£20\", this.roundToTwo(denomObj.change[1].val / 20)],\n            [\"£10\", this.roundToTwo(denomObj.change[2].val / 10)],\n            [\"£5\", this.roundToTwo(denomObj.change[3].val / 5)],\n            [\"£2\", this.roundToTwo(denomObj.change[4].val / 2)],\n            [\"£1\", this.roundToTwo(denomObj.change[5].val / 1)],\n            [\"50p\", this.roundToTwo(denomObj.change[6].val / 0.50)],\n            [\"20p\", this.roundToTwo(denomObj.change[7].val / 0.20)],\n            [\"10p\", this.roundToTwo(denomObj.change[8].val / 0.10)],\n            [\"5p\", this.roundToTwo(denomObj.change[9].val / 0.05)],\n            [\"2p\", this.roundToTwo(denomObj.change[10].val / 0.02)],\n            [\"1p\", this.roundToTwo(denomObj.change[11].val / 0.01)]\n        ]\n\n        \n        if (previousState.price !== this.state.price ||\n            previousState.cashGiven !== this.state.cashGiven ||\n            previousState.till !== this.state.till) {\n                this.setState({\n                    custCash: cashback,\n                    status: denomObj.status\n                })\n                this.props.updateStatus(denomObj.status)\n            }\n\n\n        for (let i in denomObj.change) {\n            document.getElementById(cashback[i][0]).innerHTML = \"x\"+ cashback[i][1]\n        }\n\n        var totalCashback = parseFloat(this.roundToTwo(\n            cashback[0][1] * 50 +\n            cashback[1][1] * 20 +\n            cashback[2][1] * 10 +\n            cashback[3][1] * 5 +\n            cashback[4][1] * 2 +\n            cashback[5][1] * 1 +\n            cashback[6][1] * 0.50 +\n            cashback[7][1] * 0.20 +\n            cashback[8][1] * 0.10 +\n            cashback[9][1] * 0.05 +\n            cashback[10][1] * 0.02 +\n            cashback[11][1] * 0.01 \n        ))\n\n        document.getElementById(\"custCash\").innerHTML = \"£\" + totalCashback.toFixed(2);  \n    }\n    \n    render() {\n\n        return (\n            \n            <div>\n\n                <div className=\"cash\">\n           \n                    <div className=\"denomContainer\">               \n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£50</h4>\n                            <h6 id=\"£50\"   style={{color: this.state.custCash[0][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£20</h4>\n                            <h6 id=\"£20\"  style={{color: this.state.custCash[1][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£10</h4>\n                            <h6 id=\"£10\"  style={{color: this.state.custCash[2][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£5</h4>\n                            <h6 id=\"£5\" style={{color: this.state.custCash[3][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£2</h4>\n                            <h6 id=\"£2\" style={{color: this.state.custCash[4][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>£1</h4>\n                            <h6 id=\"£1\" style={{color: this.state.custCash[5][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>50p</h4>\n                            <h6 id=\"50p\" style={{color: this.state.custCash[6][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>20p</h4>\n                            <h6 id=\"20p\" style={{color: this.state.custCash[7][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>10p</h4>\n                            <h6 id=\"10p\" style={{color: this.state.custCash[8][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>5p</h4>\n                            <h6 id=\"5p\" style={{color: this.state.custCash[9][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>2p</h4>\n                            <h6 id=\"2p\" style={{color: this.state.custCash[10][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n\n                    <div className=\"denomContainer\">\n                        <div className=\"denomMultiplierContainer\">\n                            <h4>1p</h4>\n                            <h6 id=\"1p\" style={{color: this.state.custCash[11][1] > 0 ? \"darkgreen\" : \"black\"}}>x0</h6>\n                        </div>\n                    </div>\n                    \n                </div>\n                <div className=\"bottomDisplayCustomer\">\n                    <h4>Total Cash to Customer: &nbsp;</h4><h4 id=\"custCash\"></h4>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        status: state\n    }\n}\n\nexport default connect(mapStateToProps, {updateStatus} )(Cashback)\n","import { UPDATE_STATUS } from './types';\n\nconst statusData = (status) => { return {\n    type: UPDATE_STATUS,\n    status: status\n}}\nexport const updateStatus = (status) => {\n    return function(dispatch) {\n        dispatch( statusData(status) )\n    }\n}","import React, { Component } from 'react'\nimport Cashback from './Cashback';\n\nimport { connect } from 'react-redux';\nimport { updateCash } from '../actions/cashActions';\nimport store from '../store';\n\n\nclass Customer extends Component {\n    constructor() {\n        super()\n        this.state = {\n            cashGiven: 0\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(e) {\n        this.setState({\n            cashGiven: e.target.value\n        }, () => {\n            this.props.updateCash(this.state.cashGiven)\n        })\n    }\n\n    render() {\n        \n        return (\n            <div className=\"col-md-6 no-gutter\">\n               <div className=\"rightside\">\n                    <h2>Customer</h2>\n                    <form style={{textAlign: \"center\", fontSize: \"20px\"}}>\n                        Cash Given (£): <input \n                                            type=\"number\" \n                                            min=\"0\" \n                                            step=\".01\" \n                                            value={this.state.cashGiven} \n                                            onChange={this.handleChange}>\n                                        </input>\n                    </form>\n                    <img src={process.env.PUBLIC_URL + \"/hand.png\"} className=\"image\" alt=\"hand\"></img>\n                    <Cashback />\n\n               </div>\n            </div>\n        )\n    }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        cashGiven: state\n    }\n}\n\nexport default connect(mapStateToProps, {updateCash} )(Customer)","import { UPDATE_CASH } from './types';\n\nconst cashData = (cashGiven) => { return {\n    type: UPDATE_CASH,\n    cashGiven: cashGiven\n}}\nexport const updateCash = (cashGiven) => {\n    return function(dispatch) {\n        dispatch( cashData(cashGiven) )\n    }\n}","import React from 'react';\nimport Header from './components/Header';\nimport Till from './components/Till';\nimport Customer from './components/Customer';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div >\n        <Header />\n        <div className=\"row no-gutters\">\n          \n          <Till />\n          <Customer />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}